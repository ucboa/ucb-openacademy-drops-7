<?php
define('SUBMODULES', 'cas_ldap,cas_attributes,cas,ldap_servers');

function ucb_cas_requirements($phase) {
  $requirements = array();
  $t = get_t();
  $sub_modules = explode(',', SUBMODULES);
  
  if ($phase == 'install') {
    $paths = array();
    foreach ($sub_modules as $sm) {
      $path = drupal_get_path('module', $sm);
      // If ucb_cas is in the path, it's ours
      if (strpos($path, 'ucb_cas') === FALSE) {
        if (!in_array($path, $paths)) $paths[] = $path;
      }
    }
    if (count($paths) > 0 ) {
      $msg = "The UCB CAS module is trying to install modules which already exist on your site.  <p>1. Please ensure these modules are disabled at admin/build/modules.<br/>2. Then remove these files: <br/><ul><li>" . implode('<li> ', $paths) . "</ul>";
      if (!function_exists('cas_phpcas_attributes')) {
        $requirements['cas_attributes'] = array(
        'title' => $t('UCB CAS'),
        'value' => $t('Conflict'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t($msg),
        );
      }
    }
  }
  return $requirements;
}

function ucb_cas_install() {
	/* Install modules */
	$sub_modules = explode(',', SUBMODULES);

  /* 
   *  Why not just make the sub_modules dependencies of ucb_cas? Since
   *  we inject config into schemas created by these modules, we need
   *  to module_enable() so that we know for sure that the target
   *  tables exist. There are probably other ways to skin this cat...
   */

  module_enable($sub_modules);
  drupal_set_message(t("Installed ucb_cas dependencies: ") . implode(', ', $sub_modules), 'status');
  //drush-friendly links
  drupal_set_message("You can now login using cas at ". l(t("/cas"), 'cas') . '. (' . t("Do this in a different browser or logout of your admin account first.") . ')');
  drupal_set_message(t("View UCB CAS recommendations at ") . l(t("/admin/config/people/ucbcas"), 'admin/config/people/ucbcas') . '.');
  
  /*** Settings ***/
  /* LDAP */
  $ldap_servers = array(
    array(
      'sid' => 'ucb_test',
      'numeric_sid' => 0,
      'name' => 'ldap-test.berkeley.edu',
      'status' => 1,
      'ldap_type' => 'default',
      'address' => 'ldap-test.berkeley.edu',
      'port' => 389,
      'tls' => 0,
      'bind_method' => 3,
      'binddn' => '',
      'bindpw' => '',
      'basedn' => 'a:1:{i:0;s:28:"ou=people,dc=berkeley,dc=edu";}',
      'user_attr' => 'uid',
      'mail_attr' => 'mail',
      'mail_template' => '',
      'allow_conflicting_drupal_accts' => 0,
      'unique_persistent_attr' => '',
      'user_dn_expression' => '',
      'ldap_to_drupal_user' => '',
      'testing_drupal_username' => 213108,
      'weight' => 0,
    ),
    array(
      'sid' => 'ucb_prod',
      'numeric_sid' => 0,
      'name' => 'ldap.berkeley.edu',
      'status' => 1,
      'ldap_type' => 'default',
      'address' => 'ldap.berkeley.edu',
      'port' => 389,
      'tls' => 0,
      'bind_method' => 3,
      'binddn' => '',
      'bindpw' => '',
      'basedn' => 'a:1:{i:0;s:28:"ou=people,dc=berkeley,dc=edu";}',
      'user_attr' => 'uid',
      'mail_attr' => 'mail',
      'mail_template' => '',
      'allow_conflicting_drupal_accts' => 0,
      'unique_persistent_attr' => '',
      'user_dn_expression' => '',
      'ldap_to_drupal_user' => '',
      'testing_drupal_username' => 213108,
      'weight' => 0,
    ),
  );
  
  $query = db_insert('ldap_servers')
    ->fields(array('sid',
                   'numeric_sid',
                   'name',
                   'status',
                   'ldap_type',
                   'address',
                   'port',
                   'tls',
                   'bind_method',
                   'binddn',
                   'bindpw',
                   'basedn',
                   'user_attr',
                   'mail_attr',
                   'mail_template',
                   'allow_conflicting_drupal_accts',
                   'unique_persistent_attr',
                   'user_dn_expression',
                   'ldap_to_drupal_user',
                   'testing_drupal_username',
                   'weight',
                  ));
  foreach($ldap_servers as $ls) {
    $query->values($ls);
  }
  $query->execute();
  
  /* CAS Variables */
  variable_set("cas_access",  "0");
  variable_set("cas_attributes",  array(
    'sync_every_login' => 1,
    'relations' => array(
            'name' => '[cas:ldap:displayname]',
            'mail' => '[cas:ldap:mail]',
  ),
    'ldap' => array(
            'server' => 'ucb_test',
  ),
  ));
  variable_set("cas_auto_assigned_role",  array(4 => 4,
                                                2 => 1,
                                                3 => 0, 
                                                5 => 0,
                                                ));
  variable_set("cas_cert",  "");
  variable_set("cas_changePasswordURL",  "");
  variable_set("cas_check_first",  0);
  variable_set("cas_debugfile",  "");
  variable_set("cas_domain",  "");
  variable_set("cas_exclude",  "");
  variable_set("cas_first_login_destination",  "");
  variable_set("cas_hide_email",  0);
  variable_set("cas_hide_password",  1);
  variable_set("cas_library_dir",  "CAS");
  variable_set("cas_library_use_libraries", 0);
  variable_set("cas_login_drupal_invite",  "");
  variable_set("cas_login_invite",  "Log in using CalNet");
  variable_set("cas_login_message",  "Logged in via CalNet as %cas_username.");
  variable_set("cas_login_redir_message",  "You will be redirected to the secure CalNet login page.");
  variable_set("cas_logout_destination",  "<front>");
  variable_set("cas_pages",  "node/add/*
node/*/edit/*");
  variable_set("cas_pgtformat",  "plain");
  variable_set("cas_pgtpath",  "");
  variable_set("cas_port",  "443");
  variable_set("cas_proxy",  0);
  variable_set("cas_registerURL",  "");
  variable_set("cas_server",  "auth-test.berkeley.edu");
  variable_set("cas_uri",  "/cas");
  variable_set("cas_user_register",  1);
  variable_set("cas_version",  "2.0");

  //Play nicely with the ucb_mma module
  if (module_exists('ucb_mma')) {
    variable_set("cas_login_form",  "0");
  } 
  else {
  	variable_set("cas_login_form",  "2");
  }

  
  //Create alias: enforce use of /caslogout
  $alias = array('source'=>'caslogout', 'alias'=>'user/logout');
  path_save($alias);
}

/**
 * Implementation of hook_disable().
 */
function ucb_cas_disable() {
	drupal_set_message('Note: Disabling ucb_cas does not disable its companion modules.  (However uninstalling ucb_cas *will* uninstall its companion modules. See README.txt)', 'status');
}

function ucb_cas_uninstall() {
  /* Remove modules */
  $sub_modules = explode(',', SUBMODULES);
  module_disable($sub_modules, FALSE);
  if (drupal_uninstall_modules($sub_modules, FALSE)) {  
    drupal_set_message("Uninstalled ucb_cas dependencies: " . implode(', ', $sub_modules), 'status');
  }
  else {
      drupal_set_message("One or more of these modules could not be uninstalled: " . implode(', ', $sub_modules), 'warning');
  }

  //delete alias: enforce use of /caslogout
  $alias = array('source'=>'caslogout', 'alias'=>'user/logout');
  path_delete($alias);

}
